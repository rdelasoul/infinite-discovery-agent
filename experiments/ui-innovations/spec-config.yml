# UI Innovations Specification Configuration

# Shared dependencies to include when running /infinite ui-innovations
dependencies:
  # Design system dependencies (optional - innovations may break conventions)
  design-systems: []
    # - geist-core         # Include if innovation should work within design constraints
    # - geist-components   # Include for evolutionary rather than revolutionary innovations
  
  # Specification modules (recommended for innovations)
  spec-modules:
    - accessibility-standards      # Essential - innovations must remain inclusive
    - performance-requirements     # Critical - innovations shouldn't sacrifice performance
    # - realistic-data-requirements # Include if innovations need business context
  
  # Data sets (optional, depends on innovation context)
  data: []
    # - ecommerce-data    # Include for retail innovation patterns
    # - banking-data      # Include for financial interface innovations

# Experiment configuration
experiment:
  type: "ui-innovations"
  output_format: "single-file"
  naming_pattern: "ui_innovation_{iteration}.html"

# Notes:
# - Accessibility and performance are non-negotiable even for revolutionary UI
# - Design system dependencies usually omitted to allow radical departures
# - Data dependencies useful when innovations target specific business domains
# - Focus on genuinely novel paradigms that solve real interface problems
# - Each iteration should demonstrate completely new interaction approaches