# Functional UX Patterns Specification Configuration

# Shared dependencies to include when running /infinite functional-ux-patterns
dependencies:
  # Design system dependencies (core to this experiment type)
  design-systems:
    - geist-core         # Essential color, typography, spacing constraints
    - geist-components   # Component patterns for consistency
    # - geist-forms      # Include for form-heavy UX patterns
    # - geist-layout     # Include for layout-focused patterns
    # - geist-feedback   # Include for feedback/notification patterns
    # - geist-status     # Include for status communication patterns
    # - geist-data       # Include for data display patterns
    # - geist-information # Include for information architecture patterns
  
  # Specification modules
  spec-modules:
    - realistic-data-requirements  # Essential for authentic business context
    # - accessibility-standards     # Include for accessibility-focused patterns
    # - performance-requirements    # Include for performance-critical patterns
  
  # Data sets (choose based on UX pattern focus)
  data:
    - banking-data       # Financial workflow patterns
    # - ecommerce-data   # Retail/shopping workflow patterns

# Experiment configuration
experiment:
  type: "functional-ux-patterns"
  output_format: "single-file"
  naming_pattern: "ux_pattern_{iteration}.html"

# Notes:
# - Geist design system is core constraint for visual consistency
# - Realistic data is essential for workflow pattern testing
# - Additional Geist modules can be enabled based on pattern focus
# - Banking data provides rich business context for B2B patterns
# - This configuration emphasizes function over visual variation